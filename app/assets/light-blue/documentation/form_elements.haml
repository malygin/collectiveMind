!!!
%html{:xmlns => "http://www.w3.org/1999/html"}
  %head
    %title Light Blue Documentation
    %link{:href => "css/documentation.css", :rel => "stylesheet"}/
    %meta{:content => "width=device-width, initial-scale=1.0", :name => "viewport"}/
    %meta{:content => "", :name => "description"}/
    %meta{:content => "", :name => "author"}/
    %meta{:charset => "utf-8"}/
  %body.background-two
    %nav#sidebar.sidebar
      %ul#side-nav.side-nav
        %li.green
          %a{:href => "index.html"}
            %i.icon-desktop
            %span.name Dashboard
        %li.teal.accordion-group
          %a.accordion-toggle.collapsed{"data-parent" => "#side-nav", "data-toggle" => "collapse", :href => "#stats-collapse"}
            %i.icon-bar-chart
            %span.name Statistics
          %ul#stats-collapse.accordion-body.collapse
            %li
              %a{:href => "stat_statistics.html"} Stats
            %li
              %a{:href => "stat_charts.html"} Charts
            %li
              %a{:href => "stat_realtime.html"} Realtime
        %li.active.blue.accordion-group
          %a.accordion-toggle{"data-parent" => "#side-nav", "data-toggle" => "collapse", :href => "#forms-collapse"}
            %i.icon-edit
            %span.name Forms
          %ul#forms-collapse.accordion-body.collapse.in
            %li
              %a{:href => "form_account.html"} Account
            %li
              %a{:href => "form_article.html"} Article
            %li.active
              %a{:href => "form_elements.html"} Elements
            %li
              %a{:href => "form_validation.html"} Validation
            %li
              %a{:href => "form_wizard.html"} Wizard
        %li.brown.accordion-group
          %a.accordion-toggle.collapsed{"data-parent" => "#side-nav", "data-toggle" => "collapse", :href => "#ui-collapse"}
            %i.icon-magic
            %span.name UI
          %ul#ui-collapse.accordion-body.collapse
            %li
              %a{:href => "ui_buttons.html"} Buttons
            %li
              %a{:href => "ui_dialogs.html"} Dialogs
            %li
              %a{:href => "ui_notifications.html"} Notifications
            %li
              %a{:href => "ui_icons.html"} Icons
            %li
              %a{:href => "ui_tabs.html"} Tabs
            %li
              %a{:href => "ui_accordion.html"} Accordion
        %li.dark-red.accordion-group
          %a.accordion-toggle.collapsed{"data-parent" => "#side-nav", "data-toggle" => "collapse", :href => "#components-collapse"}
            %i.icon-bookmark-empty
            %span.name Components
          %ul#components-collapse.accordion-body.collapse
            %li
              %a{:href => "component_calendar.html"} Calendar
            %li
              %a{:href => "component_maps.html"} Maps
            %li
              %a{:href => "component_gallery.html"} Gallery
            %li
              %a{:href => "component_fileupload.html"} Fileupload
        %li.red.accordion-group
          %a.accordion-toggle.collapsed{"data-parent" => "#side-nav", "data-toggle" => "collapse", :href => "#tables-collapse"}
            %i.icon-table
            %span.name Tables
          %ul#tables-collapse.accordion-body.collapse
            %li
              %a{:href => "tables_static.html"} Static
            %li
              %a{:href => "tables_dynamic.html"} Dynamic
        %li.orange
          %a{:href => "grid.html"}
            %i.icon-columns
            %span.name
              Widgets &nbsp;
              %span.label.label-info new
        %li.lime.accordion-group
          %a.accordion-toggle.collapsed{"data-parent" => "#side-nav", "data-toggle" => "collapse", :href => "#special-collapse"}
            %i.icon-asterisk
            %span.name Special
          %ul#special-collapse.accordion-body.collapse
            %li
              %a{:href => "special_search.html"} Search
            %li
              %a{:href => "login.html"} Login
            %li
              %a{:href => "special_404.html"} 404
    .wrap
      %header.page-header
        %h1 Documentation
      .content.container-fluid
        .row-fluid
          .span10.offset1
            %section.widget
              %h2 Forms
              %p
                There are four general styles available to style forms:
                = succeed "," do
                  %code .form-horizontal
                = succeed "," do
                  %code .form-condensed
                %code .label-left
                and no style for horizontal placed inputs,
                decreased margins, labels aligned to left and default form accordingly. You can combine any of them together.
        .row-fluid
          .span10.offset1
            %section.widget
              %h3 Inputs
              %hr/
              %p Bootstrap styles input by default, so there is no need to add any classes to inputs. Just use them. Don't forget to include input type.
              %p
                Bootstrap has a great
                = succeed "." do
                  %a{:href => "http://getbootstrap.com/css/#forms"} documentation about forms
        .row-fluid
          .span10.offset1
            %section.widget
              %h3 Prepended and appended inputs
              %hr/
              %p
                Again Bootstrap helps. It has
                = succeed "." do
                  %a{:href => "http://getbootstrap.com/css/#forms"} everything we need to prepend and append inputs
        .row-fluid
          .span10.offset1
            %section.widget
              %h3 Textareas
              %hr/
              %p
                Auto-growing textarea uses
                %a{:href => "https://github.com/jaz303/jquery-grab-bag"} Grab Bag
                autogrow plugin to increase area size dynamically. Files:
              %pre lib/jquery.autogrow-textarea.js
              %p
                Wysiwyg editor is based on
                = succeed "." do
                  %a{:href => "http://jhollingworth.github.com/bootstrap-wysihtml5/"} bootstrap-wysihtml5 plugin
                Files:
              %pre lib/bootstrap-wysihtml5/bootstrap-wysihtml5.js
        .row-fluid
          .span10.offset1
            %section.widget
              %h3 Selects
              %hr/
              %p
                Two different type of selects avaiables in
                %strong Light Blue
                template:
              %ul
                %li
                  %a{:href => "http://ivaynberg.github.com/select2/"} Select2
                  \- is a really powerful tool used to convert default selects to interactive search-enabled widgets.
                %li
                  %a{:href => "https://github.com/silviomoreto/bootstrap-select"} Bootstrap Select
                  \- is Bootstrap based custom select, designed to behave like regular Bootstrap selects.
                  This one can be colored as any button.
              %p Required files:
              %pre
                :preserve
                  
                  lib/select2.js
                  lib/bootstrap-select/bootstrap-select.js        .row-fluid
          .span10.offset1
            %section.widget
              %h3 Checkboxes and Radio
              %hr/
              %p
                To style default checkboxes and radio buttons
                %a{:href => "http://damirfoy.com/iCheck/"} iCheck
                library is used. Files:
              %pre
                :preserve
                  
                  lib/icheck.js/jquery.icheck.js              .alert.alert-info
                %strong Note!
                Light Blue versions 1.0-1.2 uses
                %a{:href => "http://uniformjs.com/"} Uniform
                as a checkbox styling library. Check previous documentation if needed.
              %h3 Button-like checkboxes
              %hr/
              %p
                Bootstrap has a great api to handle button states -
                = succeed "," do
                  %a{:href => "http://getbootstrap.com/javascript/#buttons"} bootstrap-button.js
                so using it to
                imitate checkbox or radio buttons.
              %p
                You also can add
                %code data-toggle-class
                attribute to your buttons so they change their class depending on state. For example:
              %pre
                %code
                  :preserve
                    &lt;div class="btn-group" data-toggle="buttons-radio"&gt;
                        &lt;button class="btn" data-toggle-class="btn-success"&gt;One&lt;/button&gt;
                        &lt;button class="btn btn-success active" data-toggle-class="btn-success"&gt;Two&lt;/button&gt;
                    &lt;/div&gt;              %h3 On-Off Switches
              %hr/
              %p
                There is a special plugin to do that -
                = succeed "." do
                  %a{:href => "http://www.larentis.eu/switch/"} Bootstrap switch
                Include following files:
              %pre lib/bootstrap-switch.js
        .row-fluid
          .span10.offset1
            %section.widget
              %h3 Pickers
              %hr/
              %p
                Any field may have either
                %a{:href => "http://www.eyecon.ro/bootstrap-datepicker/"} Datepicker
                or
                %a{:href => "http://www.eyecon.ro/bootstrap-colorpicker/"} Colorpicker
                attached. Required files:
              %pre
                :preserve
                  
                  lib/bootstrap-datepicker.js
                  lib/bootstrap-colorpicker.js        .row-fluid
          .span10.offset1
            %section.widget
              %h3 Input Sizing
              %hr/
              %p
                Any input can be sized by adding
                %code .span*
                class or
                %code .input-block-level
                if
                100% width required.
        .row-fluid
          .span10.offset1
            %section.widget
              %h3 Masked Inputs
              %hr/
              %p
                To make any input accept only formatted values there is a great plugin to use -
                = succeed "." do
                  %a{:href => "http://digitalbush.com/projects/masked-input-plugin/"} Masked Input Plugin
                Files:
              %pre lib/jquery-maskedinput/jquery.maskedinput.js
    / jquery and friends
    %script{:src => "js/jquery.1.9.0.min.js"}
    %script{:src => "js/bootstrap-transition.js"}
    %script{:src => "js/bootstrap-collapse.js"}
