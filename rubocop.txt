Inspecting 199 files
..CC.WCW....C.C.....W..........C.C.......WCWWW.W.WW.WW.CCCCCC..........................................................................................................................................

Offenses:

spec/support/cabinets_spec.rb:33:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/support/cabinets_spec.rb:34:7: C: Use 2 (not 4) spaces for indentation.
          click_link 'cabinet_close_sticker'
      ^^^^
spec/support/cabinets_spec.rb:46:29: C: Use next to skip iteration.
      Core::Project::STAGES.each do |num_stage, stage|
                            ^^^^
spec/support/utilities.rb:4:13: C: Use def with parentheses when there are parameters.
def sign_in user
            ^^^^
spec/support/utilities.rb:42:1: C: Assignment Branch Condition size for validate_default_links_and_sidebar is too high. [81/70]
def validate_default_links_and_sidebar(project, user)
^^^
spec/support/utilities.rb:42:1: C: Method has too many lines. [19/11]
def validate_default_links_and_sidebar(project, user)
^^^
spec/support/utilities.rb:68:1: C: Method has too many lines. [14/11]
def validate_projects_links(projects, expect)
^^^
spec/support/utilities.rb:71:56: C: Surrounding space missing for operator +.
      expect(page).to have_link('go_to_opened_project_'+projects[:opened].id.to_s, text: I18n.t('link.go_to_project'), href: "/project/#{projects[:opened].id}")
                                                       ^
spec/support/utilities.rb:73:60: C: Surrounding space missing for operator +.
      expect(page).not_to have_link('go_to_opened_project_'+projects[:opened].id.to_s, text: I18n.t('link.go_to_project'), href: "/project/#{projects[:opened].id}")
                                                           ^
spec/support/utilities.rb:76:3: C: Use a guard clause instead of wrapping the code inside a conditional expression.
  if projects[:closed]
  ^^
spec/support/utilities.rb:78:56: C: Surrounding space missing for operator +.
      expect(page).to have_link('go_to_closed_project_'+projects[:closed].id.to_s, text: I18n.t('link.go_to_project'), href: "/project/#{projects[:closed].id}")
                                                       ^
spec/support/utilities.rb:80:60: C: Surrounding space missing for operator +.
      expect(page).not_to have_link('go_to_closed_project_'+projects[:closed].id.to_s, text: I18n.t('link.go_to_project'), href: "/project/#{projects[:closed].id}")
                                                           ^
spec/support/mock_web_socket.rb:4:1: C: Extra empty line detected at module body beginning.
spec/support/mock_web_socket.rb:9:7: W: Useless assignment to variable - env.
      env = Rack::MockRequest.env_for('/websocket')
      ^^^
spec/support/mock_web_socket.rb:12:24: C: Surrounding space missing in default value assignment.
    def onmessage(event=nil)
                       ^
spec/support/mock_web_socket.rb:16:22: C: Surrounding space missing in default value assignment.
    def onerror(event=nil)
                     ^
spec/support/mock_web_socket.rb:20:22: C: Surrounding space missing in default value assignment.
    def onclose(event=nil)
                     ^
spec/support/mock_web_socket.rb:25:8: C: Space inside square brackets detected.
      [ -1, {}, [] ]
       ^
spec/support/mock_web_socket.rb:25:19: C: Space inside square brackets detected.
      [ -1, {}, [] ]
                  ^
spec/support/mock_web_socket.rb:28:15: W: Unused method argument - args. If it's necessary, use _ or _args as an argument name to indicate that it won't be used. You can also write as send(*) if you want the method to accept any arguments but don't care about them.
    def send(*args)
              ^^^^
spec/support/mock_web_socket.rb:32:17: W: Unused method argument - event. If it's necessary, use _ or _event as an argument name to indicate that it won't be used. You can also write as trigger(*) if you want the method to accept any arguments but don't care about them.
    def trigger(event)
                ^^^^^
spec/support/mock_web_socket.rb:40:1: C: Extra empty line detected at module body end.
spec/support/mock_web_socket.rb:41:4: C: Final newline missing.
end
   
spec/support/helper_methods.rb:42:6: C: Final newline missing.
# end
     
spec/support/posts_spec.rb:43:45: W: Unused block argument - moderator. If it's necessary, use _ or _moderator as an argument name to indicate that it won't be used.
shared_examples 'content with comments' do |moderator = false, count = 2, project_status = 1|
                                            ^^^^^^^^^
spec/support/posts_spec.rb:43:75: W: Unused block argument - project_status. If it's necessary, use _ or _project_status as an argument name to indicate that it won't be used.
shared_examples 'content with comments' do |moderator = false, count = 2, project_status = 1|
                                                                          ^^^^^^^^^^^^^^
spec/support/posts_spec.rb:49:1: C: Extra blank line detected.
spec/support/posts_spec.rb:165:1: C: Extra empty line detected at block body end.
spec/support/posts_spec.rb:168:35: W: Unused block argument - moderator. You can omit the argument if you don't care about it.
shared_examples 'likes posts' do |moderator = false|
                                  ^^^^^^^^^
spec/support/posts_spec.rb:171:1: C: Extra blank line detected.
spec/support/posts_spec.rb:215:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/support/posts_spec.rb:220:12: C: Put one space between the method name and the first argument.
      visit  users_path(project)
           ^^
spec/support/posts_spec.rb:221:82: C: Space inside parentheses detected.
      expect(page).to have_selector('span.rating_cell', text: @post1.class::SCORE )
                                                                                 ^
spec/support/posts_spec.rb:223:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/support/posts_spec.rb:228:12: C: Put one space between the method name and the first argument.
      visit  users_path(project)
           ^^
spec/support/posts_spec.rb:229:86: C: Space inside parentheses detected.
      expect(page).not_to have_selector('span.rating_cell', text: @post1.class::SCORE )
                                                                                     ^
spec/support/posts_spec.rb:236:12: C: Put one space between the method name and the first argument.
      visit  users_path(project)
           ^^
spec/support/posts_spec.rb:237:64: C: Space inside parentheses detected.
      expect(page).to have_selector('span.rating_cell', text: 5 )
                                                               ^
spec/support/posts_spec.rb:241:12: C: Put one space between the method name and the first argument.
      visit  users_path(project)
           ^^
spec/support/posts_spec.rb:242:64: C: Space inside parentheses detected.
      expect(page).to have_selector('span.rating_cell', text: 0 )
                                                               ^
spec/support/posts_spec.rb:250:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/support/posts_spec.rb:265:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/support/posts_spec.rb:300:30: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_css(".help_popover_content")
                             ^^^^^^^^^^^^^^^^^^^^^^^
spec/support/posts_spec.rb:301:31: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
    expect(page).to have_link("close_help_popover")
                              ^^^^^^^^^^^^^^^^^^^^
spec/support/posts_spec.rb:335:1: C: 1 trailing blank lines detected.
spec/models/plan/voting_spec.rb:17:4: C: Final newline missing.
end
   
spec/models/novation/voting_spec.rb:4:1: C: Extra empty line detected at block body beginning.
spec/models/news_spec.rb:9:5: W: Useless assignment to variable - old_news.
    old_news = create :news, created_at: 2.days.ago
    ^^^^^^^^
spec/factories/core.rb:41:1: C: Extra empty line detected at block body end.
spec/factories/users.rb:16:1: C: Extra blank line detected.
spec/requests/estimate/posts_spec.rb:7:6: W: (...) interpreted as grouped expression.
  let (:user_data) { create :user }
     ^
spec/requests/estimate/posts_spec.rb:9:6: W: (...) interpreted as grouped expression.
  let (:project) { @project = create :closed_project, stage: '6:0' }
     ^
spec/requests/knowbase/posts_spec.rb:30:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      find(:css, "#tooltip_db").trigger('click')
                 ^^^^^^^^^^^^^
spec/requests/knowbase/posts_spec.rb:47:1: C: Extra empty line detected at block body end.
spec/requests/plan/posts_spec.rb:7:6: W: (...) interpreted as grouped expression.
  let (:user_data) { create :user }
     ^
spec/requests/plan/posts_spec.rb:9:6: W: (...) interpreted as grouped expression.
  let (:project) { @project = create :closed_project, stage: '5:0' }
     ^
spec/requests/plan/posts_spec.rb:104:1: C: Extra empty line detected at block body end.
spec/requests/novation/posts_spec.rb:7:6: W: (...) interpreted as grouped expression.
  let (:user_data) { create :user }
     ^
spec/requests/novation/posts_spec.rb:9:6: W: (...) interpreted as grouped expression.
  let (:project) { @project = create :closed_project, stage: '4:0' }
     ^
spec/requests/novation/posts_spec.rb:56:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      find(:css, "span#sorter span.sort-1").trigger('click')
                 ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/novation/posts_spec.rb:58:19: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      first(:css, "#tab_concept_novations .post-block .what a").click
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/novation/posts_spec.rb:63:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      find(:css, "span#sorter span.sort-2").trigger('click')
                 ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/novation/posts_spec.rb:65:19: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      first(:css, "#tab_concept_novations .post-block .what a").click
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/discontent/posts_spec.rb:7:6: W: (...) interpreted as grouped expression.
  let (:user_data) { create :user }
     ^
spec/requests/discontent/posts_spec.rb:9:6: W: (...) interpreted as grouped expression.
  let (:project) { @project = create :closed_project, stage: '2:0' }
     ^
spec/requests/discontent/posts_spec.rb:51:7: C: Missing space after #.
      #create new aspect
      ^^^^^^^^^^^^^^^^^^
spec/requests/discontent/posts_spec.rb:66:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      find(:css, "a.select-aspect").trigger('click')
                 ^^^^^^^^^^^^^^^^^
spec/requests/discontent/posts_spec.rb:78:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      find(:css, "a.select-aspect").trigger('click')
                 ^^^^^^^^^^^^^^^^^
spec/requests/discontent/posts_spec.rb:96:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      find(:css, "span#sorter span.sort-1").trigger('click')
                 ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/discontent/posts_spec.rb:98:19: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      first(:css, "#tab_aspect_posts .post-block .what a").click
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/discontent/posts_spec.rb:103:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      find(:css, "span#sorter span.sort-2").trigger('click')
                 ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/discontent/posts_spec.rb:105:19: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      first(:css, "#tab_aspect_posts .post-block .what a").click
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/discontent/posts_spec.rb:189:1: C: Extra blank line detected.
spec/requests/discontent/posts_spec.rb:189:1: C: Extra empty line detected at block body end.
spec/requests/users_spec.rb:9:6: W: (...) interpreted as grouped expression.
  let (:project) { @project = create :closed_project, stage: '1:0' }
     ^
spec/requests/users_spec.rb:19:1: C: Extra blank line detected.
spec/requests/users_spec.rb:38:40: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(page).to have_content t("form.user.update_success")
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:53:40: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(page).to have_content t("form.user.update_success")
                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:77:44: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        expect(page).to_not have_content t("form.user.update_success")
                                           ^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/users_spec.rb:133:1: C: Extra empty line detected at block body end.
spec/requests/users_spec.rb:161:1: C: Extra empty line detected at block body end.
spec/requests/concept/posts_spec.rb:7:6: W: (...) interpreted as grouped expression.
  let (:user_data) { create :user }
     ^
spec/requests/concept/posts_spec.rb:9:6: W: (...) interpreted as grouped expression.
  let (:project) { @project = create :closed_project, stage: '3:0' }
     ^
spec/requests/concept/posts_spec.rb:54:7: C: Missing space after #.
      #create new concept
      ^^^^^^^^^^^^^^^^^^^
spec/requests/concept/posts_spec.rb:68:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      find(:css, "span#opener").trigger('click')
                 ^^^^^^^^^^^^^
spec/requests/concept/posts_spec.rb:79:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      find(:css, "span#opener").trigger('click')
                 ^^^^^^^^^^^^^
spec/requests/concept/posts_spec.rb:96:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      find(:css, "span#sorter span.sort-1").trigger('click')
                 ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/concept/posts_spec.rb:98:19: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      first(:css, "#tab_dispost_concepts .post-block .what a").click
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/concept/posts_spec.rb:103:18: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      find(:css, "span#sorter span.sort-2").trigger('click')
                 ^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/concept/posts_spec.rb:105:19: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
      first(:css, "#tab_dispost_concepts .post-block .what a").click
                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
spec/requests/concept/posts_spec.rb:181:1: C: Extra empty line detected at block body end.
spec/requests/core/projects_spec.rb:6:6: W: (...) interpreted as grouped expression.
  let (:user) { create :user }
     ^
spec/requests/core/projects_spec.rb:7:6: W: (...) interpreted as grouped expression.
  let (:moderator) { create :moderator }
     ^
spec/requests/core/projects_spec.rb:8:6: W: (...) interpreted as grouped expression.
  let (:project) { create :core_project }
     ^
spec/requests/core/projects_spec.rb:9:6: W: (...) interpreted as grouped expression.
  let (:closed_project_for_invite) { create :core_project, type_access: 2 }
     ^
spec/requests/core/projects_spec.rb:10:7: W: (...) interpreted as grouped expression.
  let! (:opened_project) { create :core_project, type_access: 0 }
      ^
spec/requests/core/projects_spec.rb:11:7: W: (...) interpreted as grouped expression.
  let! (:closed_project) { create :core_project, type_access: 2 }
      ^
spec/requests/core/projects_spec.rb:18:31: C: Space inside { missing.
      validate_projects_links({closed: closed_project, opened: opened_project}, expect: false)
                              ^
spec/requests/core/projects_spec.rb:18:78: C: Space inside } missing.
      validate_projects_links({closed: closed_project, opened: opened_project}, expect: false)
                                                                             ^
spec/requests/core/projects_spec.rb:25:31: C: Space inside { missing.
      validate_projects_links({closed: closed_project}, expect: false)
                              ^
spec/requests/core/projects_spec.rb:25:54: C: Space inside } missing.
      validate_projects_links({closed: closed_project}, expect: false)
                                                     ^
spec/requests/core/projects_spec.rb:32:31: C: Space inside { missing.
      validate_projects_links({opened: opened_project}, expect: true)
                              ^
spec/requests/core/projects_spec.rb:32:54: C: Space inside } missing.
      validate_projects_links({opened: opened_project}, expect: true)
                                                     ^
spec/requests/core/projects_spec.rb:40:31: C: Space inside { missing.
      validate_projects_links({opened: opened_project, closed: closed_project}, expect: true)
                              ^
spec/requests/core/projects_spec.rb:40:78: C: Space inside } missing.
      validate_projects_links({opened: opened_project, closed: closed_project}, expect: true)
                                                                             ^
spec/requests/core/projects_spec.rb:76:16: C: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/core/projects_spec.rb:83:16: C: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/core/projects_spec.rb:103:16: C: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/core/projects_spec.rb:111:16: C: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/core/projects_spec.rb:128:33: C: Space inside { missing.
        validate_projects_links({closed: closed_project_for_invite, opened: opened_project}, expect: true)
                                ^
spec/requests/core/projects_spec.rb:128:91: C: Space inside } missing.
        validate_projects_links({closed: closed_project_for_invite, opened: opened_project}, expect: true)
                                                                                          ^
spec/requests/core/projects_spec.rb:130:33: C: Space inside { missing.
        validate_projects_links({closed: closed_project}, expect: false)
                                ^
spec/requests/core/projects_spec.rb:130:56: C: Space inside } missing.
        validate_projects_links({closed: closed_project}, expect: false)
                                                       ^
spec/requests/core/projects_spec.rb:134:81: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        find_link("go_to_closed_project_#{closed_project_for_invite.id}", text: "Перейти к процедуре", href: "/project/#{closed_project_for_invite.id}").click
                                                                                ^^^^^^^^^^^^^^^^^^^^^
spec/requests/core/projects_spec.rb:141:81: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        find_link("go_to_closed_project_#{closed_project_for_invite.id}", text: "Перейти к процедуре", href: "/project/#{closed_project_for_invite.id}").click
                                                                                ^^^^^^^^^^^^^^^^^^^^^
spec/requests/core/projects_spec.rb:148:1: C: Extra blank line detected.
spec/requests/core/projects_spec.rb:179:16: C: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/core/projects_spec.rb:186:16: C: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/core/projects_spec.rb:206:16: C: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/core/projects_spec.rb:209:69: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        }.to change { closed_project_for_invite.reload.stage }.from("1:0").to("1:1")
                                                                    ^^^^^
spec/requests/core/projects_spec.rb:209:79: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        }.to change { closed_project_for_invite.reload.stage }.from("1:0").to("1:1")
                                                                              ^^^^^
spec/requests/core/projects_spec.rb:216:16: C: Avoid using {...} for multi-line blocks.
        expect {
               ^
spec/requests/core/projects_spec.rb:219:69: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        }.to change { closed_project_for_invite.reload.stage }.from("1:1").to("1:0")
                                                                    ^^^^^
spec/requests/core/projects_spec.rb:219:79: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        }.to change { closed_project_for_invite.reload.stage }.from("1:1").to("1:0")
                                                                              ^^^^^
spec/requests/core/projects_spec.rb:233:33: C: Space inside { missing.
        validate_projects_links({closed: closed_project_for_invite, opened: opened_project}, expect: true)
                                ^
spec/requests/core/projects_spec.rb:233:91: C: Space inside } missing.
        validate_projects_links({closed: closed_project_for_invite, opened: opened_project}, expect: true)
                                                                                          ^
spec/requests/core/projects_spec.rb:237:81: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        find_link("go_to_closed_project_#{closed_project_for_invite.id}", text: "Перейти к процедуре", href: "/project/#{closed_project_for_invite.id}").click
                                                                                ^^^^^^^^^^^^^^^^^^^^^
spec/requests/core/projects_spec.rb:243:81: C: Prefer single-quoted strings when you don't need string interpolation or special symbols.
        find_link("go_to_closed_project_#{closed_project_for_invite.id}", text: "Перейти к процедуре", href: "/project/#{closed_project_for_invite.id}").click
                                                                                ^^^^^^^^^^^^^^^^^^^^^
spec/requests/aspect/posts_spec.rb:8:6: W: (...) interpreted as grouped expression.
  let (:project) { @project = create :closed_project }
     ^
spec/requests/aspect/posts_spec.rb:45:1: C: Extra blank line detected.
spec/requests/completion/posts_spec.rb:7:6: W: (...) interpreted as grouped expression.
  let (:user_data) { create :user }
     ^
spec/requests/completion/posts_spec.rb:9:6: W: (...) interpreted as grouped expression.
  let (:project) { @project = create :closed_project, stage: '7:0' }
     ^
spec/requests/cabinet/aspects_spec.rb:22:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/aspects_spec.rb:31:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/aspects_spec.rb:44:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/aspects_spec.rb:59:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/aspects_spec.rb:76:12: C: Avoid using {...} for multi-line blocks.
    expect {
           ^
spec/requests/cabinet/novations_spec.rb:46:1: C: Extra empty line detected at block body end.
spec/requests/cabinet/novations_spec.rb:50:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/novations_spec.rb:63:12: C: Avoid using {...} for multi-line blocks.
    expect {
           ^
spec/requests/cabinet/novations_spec.rb:75:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/novations_spec.rb:93:12: C: Avoid using {...} for multi-line blocks.
    expect {
           ^
spec/requests/cabinet/discontents_spec.rb:47:11: C: Space missing inside {.
      it {expect(page).to have_content t('form.discontent.new_success') }
          ^
spec/requests/cabinet/discontents_spec.rb:48:1: C: Extra empty line detected at block body end.
spec/requests/cabinet/discontents_spec.rb:52:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/discontents_spec.rb:73:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/discontents_spec.rb:88:12: C: Avoid using {...} for multi-line blocks.
    expect {
           ^
spec/requests/cabinet/discontents_spec.rb:100:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/discontents_spec.rb:109:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/discontents_spec.rb:127:12: C: Avoid using {...} for multi-line blocks.
    expect {
           ^
spec/requests/cabinet/discontents_spec.rb:135:10: C: Put one space between the method name and the first argument.
    visit  new_concept_post_path(@project)
         ^^
spec/requests/cabinet/plans_spec.rb:22:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/plans_spec.rb:30:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/plans_spec.rb:41:12: C: Avoid using {...} for multi-line blocks.
    expect {
           ^
spec/requests/cabinet/plans_spec.rb:53:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/plans_spec.rb:68:12: C: Avoid using {...} for multi-line blocks.
    expect {
           ^
spec/requests/cabinet/concepts_spec.rb:38:1: C: Extra empty line detected at block body end.
spec/requests/cabinet/concepts_spec.rb:43:1: C: Extra blank line detected.
spec/requests/cabinet/concepts_spec.rb:44:1: C: Extra blank line detected.
spec/requests/cabinet/concepts_spec.rb:44:1: C: Extra empty line detected at block body end.
spec/requests/cabinet/concepts_spec.rb:48:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/concepts_spec.rb:69:12: C: Avoid using {...} for multi-line blocks.
    expect {
           ^
spec/requests/cabinet/concepts_spec.rb:81:14: C: Avoid using {...} for multi-line blocks.
      expect {
             ^
spec/requests/cabinet/concepts_spec.rb:99:12: C: Avoid using {...} for multi-line blocks.
    expect {
           ^
spec/spec_helper.rb:31:53: C: Use %r around regular expression.
    "#{example.full_description.gsub(' ', '-').gsub(/^.*\/spec\//, '')}"
                                                    ^^^^^^^^^^^^^

199 files inspected, 165 offenses detected
